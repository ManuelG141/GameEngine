#pragma once

namespace ChessBoard {
	constexpr float xOffset = -0.75f;
	constexpr float yOffset = 0.75f;
	constexpr float boardWidth = 1.5f;
	constexpr float sqSze = boardWidth/8;
	
	constexpr float vertices[3 * 79] = {
		//      x,         y,    z,
		xOffset +      0.0f, yOffset -      0.0f, 0.0f,
		xOffset +     sqSze, yOffset -      0.0f, 0.0f,
		xOffset + 2 * sqSze, yOffset -      0.0f, 0.0f,
		xOffset + 3 * sqSze, yOffset -      0.0f, 0.0f,
		xOffset + 4 * sqSze, yOffset -      0.0f, 0.0f,
		xOffset + 5 * sqSze, yOffset -      0.0f, 0.0f,
		xOffset + 6 * sqSze, yOffset -      0.0f, 0.0f,
		xOffset + 7 * sqSze, yOffset -      0.0f, 0.0f,

		xOffset +      0.0f, yOffset -     sqSze, 0.0f,
		xOffset +     sqSze, yOffset -     sqSze, 0.0f,
		xOffset + 2 * sqSze, yOffset -     sqSze, 0.0f,
		xOffset + 3 * sqSze, yOffset -     sqSze, 0.0f,
		xOffset + 4 * sqSze, yOffset -     sqSze, 0.0f,
		xOffset + 5 * sqSze, yOffset -     sqSze, 0.0f,
		xOffset + 6 * sqSze, yOffset -     sqSze, 0.0f,
		xOffset + 7 * sqSze, yOffset -     sqSze, 0.0f,
		xOffset + 8 * sqSze, yOffset -     sqSze, 0.0f,

		xOffset +      0.0f, yOffset - 2 * sqSze, 0.0f,
		xOffset +     sqSze, yOffset - 2 * sqSze, 0.0f,
		xOffset + 2 * sqSze, yOffset - 2 * sqSze, 0.0f,
		xOffset + 3 * sqSze, yOffset - 2 * sqSze, 0.0f,
		xOffset + 4 * sqSze, yOffset - 2 * sqSze, 0.0f,
		xOffset + 5 * sqSze, yOffset - 2 * sqSze, 0.0f,
		xOffset + 6 * sqSze, yOffset - 2 * sqSze, 0.0f,
		xOffset + 7 * sqSze, yOffset - 2 * sqSze, 0.0f,
		xOffset + 8 * sqSze, yOffset - 2 * sqSze, 0.0f,

		xOffset +      0.0f, yOffset - 3 * sqSze, 0.0f,
		xOffset +     sqSze, yOffset - 3 * sqSze, 0.0f,
		xOffset + 2 * sqSze, yOffset - 3 * sqSze, 0.0f,
		xOffset + 3 * sqSze, yOffset - 3 * sqSze, 0.0f,
		xOffset + 4 * sqSze, yOffset - 3 * sqSze, 0.0f,
		xOffset + 5 * sqSze, yOffset - 3 * sqSze, 0.0f,
		xOffset + 6 * sqSze, yOffset - 3 * sqSze, 0.0f,
		xOffset + 7 * sqSze, yOffset - 3 * sqSze, 0.0f,
		xOffset + 8 * sqSze, yOffset - 3 * sqSze, 0.0f,

		xOffset +      0.0f, yOffset - 4 * sqSze, 0.0f,
		xOffset +     sqSze, yOffset - 4 * sqSze, 0.0f,
		xOffset + 2 * sqSze, yOffset - 4 * sqSze, 0.0f,
		xOffset + 3 * sqSze, yOffset - 4 * sqSze, 0.0f,
		xOffset + 4 * sqSze, yOffset - 4 * sqSze, 0.0f,
		xOffset + 5 * sqSze, yOffset - 4 * sqSze, 0.0f,
		xOffset + 6 * sqSze, yOffset - 4 * sqSze, 0.0f,
		xOffset + 7 * sqSze, yOffset - 4 * sqSze, 0.0f,
		xOffset + 8 * sqSze, yOffset - 4 * sqSze, 0.0f,

		xOffset +      0.0f, yOffset - 5 * sqSze, 0.0f,
		xOffset +     sqSze, yOffset - 5 * sqSze, 0.0f,
		xOffset + 2 * sqSze, yOffset - 5 * sqSze, 0.0f,
		xOffset + 3 * sqSze, yOffset - 5 * sqSze, 0.0f,
		xOffset + 4 * sqSze, yOffset - 5 * sqSze, 0.0f,
		xOffset + 5 * sqSze, yOffset - 5 * sqSze, 0.0f,
		xOffset + 6 * sqSze, yOffset - 5 * sqSze, 0.0f,
		xOffset + 7 * sqSze, yOffset - 5 * sqSze, 0.0f,
		xOffset + 8 * sqSze, yOffset - 5 * sqSze, 0.0f,

		xOffset +      0.0f, yOffset - 6 * sqSze, 0.0f,
		xOffset +     sqSze, yOffset - 6 * sqSze, 0.0f,
		xOffset + 2 * sqSze, yOffset - 6 * sqSze, 0.0f,
		xOffset + 3 * sqSze, yOffset - 6 * sqSze, 0.0f,
		xOffset + 4 * sqSze, yOffset - 6 * sqSze, 0.0f,
		xOffset + 5 * sqSze, yOffset - 6 * sqSze, 0.0f,
		xOffset + 6 * sqSze, yOffset - 6 * sqSze, 0.0f,
		xOffset + 7 * sqSze, yOffset - 6 * sqSze, 0.0f,
		xOffset + 8 * sqSze, yOffset - 6 * sqSze, 0.0f,

		xOffset +      0.0f, yOffset - 7 * sqSze, 0.0f,
		xOffset +     sqSze, yOffset - 7 * sqSze, 0.0f,
		xOffset + 2 * sqSze, yOffset - 7 * sqSze, 0.0f,
		xOffset + 3 * sqSze, yOffset - 7 * sqSze, 0.0f,
		xOffset + 4 * sqSze, yOffset - 7 * sqSze, 0.0f,
		xOffset + 5 * sqSze, yOffset - 7 * sqSze, 0.0f,
		xOffset + 6 * sqSze, yOffset - 7 * sqSze, 0.0f,
		xOffset + 7 * sqSze, yOffset - 7 * sqSze, 0.0f,
		xOffset + 8 * sqSze, yOffset - 7 * sqSze, 0.0f,

		xOffset +     sqSze, yOffset - 8 * sqSze, 0.0f,
		xOffset + 2 * sqSze, yOffset - 8 * sqSze, 0.0f,
		xOffset + 3 * sqSze, yOffset - 8 * sqSze, 0.0f,
		xOffset + 4 * sqSze, yOffset - 8 * sqSze, 0.0f,
		xOffset + 5 * sqSze, yOffset - 8 * sqSze, 0.0f,
		xOffset + 6 * sqSze, yOffset - 8 * sqSze, 0.0f,
		xOffset + 7 * sqSze, yOffset - 8 * sqSze, 0.0f,
		xOffset + 8 * sqSze, yOffset - 8 * sqSze, 0.0f,
	};

	constexpr unsigned int totalIndices = 3 * 64;

	constexpr unsigned int indices[totalIndices] = {
		0, 8, 9,
		0, 1, 9,
		2, 10, 11,
		2, 3, 11,
		4, 12, 13,
		4, 5, 13,
		6, 14, 15,
		6, 7, 15,

		9, 18, 19,
		9, 10, 19,
		11, 20, 21,
		11, 12, 21,
		13, 22, 23,
		13, 14, 23,
		15, 24, 25,
		15, 16, 25,

		17, 26, 27,
		17, 18, 27,
		19, 28, 29,
		19, 20, 29,
		21, 30, 31,
		21, 22, 31,
		23, 32, 33,
		23, 24, 33,

		27, 36, 37,
		27, 28, 37,
		29, 38, 39,
		29, 30, 39,
		31, 40, 41,
		31, 32, 41,
		33, 42, 43,
		33, 34, 43,

		35, 44, 45,
		35, 36, 45,
		37, 46, 47,
		37, 38, 47,
		39, 48, 49,
		39, 40, 49,
		41, 50, 51,
		41, 42, 51,

		45, 54, 55,
		45, 46, 55,
		47, 56, 57,
		47, 48, 57,
		49, 58, 59,
		49, 50, 59,
		51, 60, 61,
		51, 52, 61,

		53, 62, 63,
		53, 54, 63,
		55, 64, 65,
		55, 56, 65,
		57, 66, 67,
		57, 58, 67,
		59, 68, 69,
		59, 60, 69,

		63, 71, 72,
		63, 64, 72,
		65, 73, 74,
		65, 66, 74,
		67, 75, 76,
		67, 68, 76,
		69, 77, 78,
		69, 70, 78
	};
}